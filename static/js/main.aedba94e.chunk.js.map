{"version":3,"sources":["Pages/Components/InventoryViewerStyle.module.css","logo.svg","product.js","Pages/Components/InventoryViewer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","getInventory","inventory","localStorage","getItem","JSON","parse","staticInventory","category","subCategories","subCategory","products","name","color","options","skuId","stocks","quantity","unlimited","InventoryViewer","props","state","cat","subCat","product","mode","console","log","this","eachCat","eachSubCat","eachProduct","edit","setItem","stringify","setState","allTables","map","className","styles","tableContainer","tableContents","hide","hideAll","showAll","colSpan","categoryHeader","onClick","_","subCategoryHeader","subCategoryRow","type","placeholder","value","onChange","evt","target","checked","errorMessage","saveButton","disabled","updateProduct","editButton","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aedba94e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContents\":\"InventoryViewerStyle_tableContents__1IrsT\",\"categoryHeader\":\"InventoryViewerStyle_categoryHeader__13ZiT\",\"subCategoryHeader\":\"InventoryViewerStyle_subCategoryHeader__3Q2s7\",\"tableContainer\":\"InventoryViewerStyle_tableContainer__1JjHG\",\"editButton\":\"InventoryViewerStyle_editButton__3_hJI\",\"errorMessage\":\"InventoryViewerStyle_errorMessage__1aPeQ\",\"quantity\":\"InventoryViewerStyle_quantity__3QaPG\",\"saveButton\":\"InventoryViewerStyle_saveButton__EpbEV\",\"stocks\":\"InventoryViewerStyle_stocks__3l9r1\",\"hideAll\":\"InventoryViewerStyle_hideAll__1iDyV\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getInventory() {\r\n\r\n  let inventory = localStorage.getItem(\"inventory\");\r\n  if (inventory) {\r\n    return JSON.parse(inventory);\r\n\r\n  }\r\n  else {\r\n    return staticInventory;\r\n  }\r\n}\r\n\r\nexport function updateInventory(inventory) {\r\n  localStorage.setItem(\"inventory\", JSON.stringify(inventory));\r\n}\r\n\r\n\r\nconst staticInventory = [\r\n  {\r\n    category: \"Vegetables and Fruits\",\r\n    subCategories: [\r\n      {\r\n        subCategory: 'Vegetables',\r\n        products: [\r\n          {\r\n            name: \"Cabbage\",\r\n            color: \"Green\",\r\n            options: \"large\",\r\n            skuId: \"sk1\",\r\n            stocks: {\r\n              quantity: 20,\r\n              unlimited: false,\r\n            }\r\n          },\r\n          {\r\n            name: \"Tomato\",\r\n            color: \"Red\",\r\n            options: \"large\",\r\n            skuId: \"sk2\",\r\n            stocks: {\r\n              quantity: 20,\r\n              unlimited: false,\r\n            },\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        subCategory: 'Fruits',\r\n        products: [\r\n          {\r\n            name: \"Apple\",\r\n            color: \"red\",\r\n            options: \"midium\",\r\n            skuId: \"sk4\",\r\n            stocks: {\r\n              quantity: 30,\r\n              unlimited: false,\r\n            }\r\n          },\r\n        ]\r\n      }],\r\n  },\r\n  {\r\n    category: \"Breads and Breakfast\",\r\n    subCategories: [\r\n      {\r\n        subCategory: 'Breads',\r\n        products: [\r\n          {\r\n            name: \"Brown Bread\",\r\n            color: \"Brown\",\r\n            options: \"small\",\r\n            skuId: \"sk3\",\r\n            stocks: {\r\n              quantity: 20,\r\n              unlimited: false,\r\n            },\r\n\r\n\r\n          },\r\n\r\n        ]\r\n\r\n      },\r\n      {\r\n        subCategory: 'Breakfast',\r\n        products: [\r\n\r\n          {\r\n            name: \"Cornflex\",\r\n            color: \"Brown\",\r\n            options: \"large\",\r\n            skuId: \"sk6\",\r\n            stocks: {\r\n              quantity: 40,\r\n              unlimited: true,\r\n            },\r\n\r\n\r\n          }\r\n        ]\r\n\r\n      }\r\n    ]\r\n  }\r\n]\r\n","import { getInventory, updateInventory } from '../../product';\r\nimport React from 'react';\r\nimport styles from './InventoryViewerStyle.module.css';\r\nclass InventoryViewer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inventory: getInventory(),\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  updateProduct(cat, subCat, product, mode) {\r\n    console.log(cat, subCat, product, mode)\r\n    for (let eachCat of this.state.inventory) {\r\n      if (eachCat.category === cat) {\r\n        for (let eachSubCat of eachCat.subCategories) {\r\n          if (eachSubCat.subCategory === subCat) {\r\n            for (let eachProduct of eachSubCat.products) {\r\n              if (eachProduct.skuId == product.skuId) {\r\n                if (mode == 'edit') {\r\n                  eachProduct.edit = true;\r\n                  console.log(eachProduct)\r\n                } else {\r\n                  eachProduct.edit = false;\r\n                  eachProduct = product;\r\n                  updateInventory(this.state.inventory);\r\n\r\n\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ inventory: this.state.inventory });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let allTables = <></>\r\n    allTables = this.state.inventory.map(eachCat => {\r\n      return (\r\n        <div className={styles.tableContainer}>\r\n\r\n          <table className={styles.tableContents}>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  ITEM NAME\r\n                </th>\r\n                <th>COLOR</th>\r\n                <th>OPTIONS</th>\r\n                <th>SKUID</th>\r\n                <th>STOCKS</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr className={eachCat.hide == true ? styles.hideAll : styles.showAll}>\r\n                <td colSpan=\"6\" >\r\n                  <div className={styles.categoryHeader}>\r\n                    {eachCat.category}\r\n                    <button onClick={_ => {\r\n                      eachCat.hide = !eachCat.hide;\r\n                      this.setState({ inventory: this.state.inventory })\r\n                    }}>\r\n                      {eachCat.hide == true ? \"➕\" : \"➖\"}\r\n                    </button>\r\n\r\n                  </div>\r\n\r\n                </td>\r\n              </tr>\r\n              {eachCat.subCategories.map(subCat => {\r\n                return <>\r\n                  <tr>\r\n                    <td colSpan=\"6\" className={styles.subCategoryHeader}> {subCat.subCategory}</td>\r\n                  </tr>\r\n                  {subCat.products.map(product => {\r\n                    return (<><tr className={styles.subCategoryRow}>\r\n                      <td>{product.name}</td>\r\n                      <td>{product.color}</td>\r\n                      <td>{product.options}</td>\r\n                      <td>{product.skuId}</td>\r\n\r\n                      {product.edit === true && <><td className={styles.stocks}>\r\n                        <input type=\"number\" placeholder=\"Enter quantity value\" value={product.stocks.quantity} className={styles.quantity} onChange={evt => {\r\n                          console.log(evt.target.value);\r\n                          product.stocks.quantity = evt.target.value;\r\n                          this.setState({ inventory: this.state.inventory })\r\n                            ;\r\n                        }}></input>\r\n                        <input type=\"checkbox\" checked={product.stocks.unlimited} onChange={evt => {\r\n                          console.log(evt.target.checked);\r\n                          product.stocks.unlimited = evt.target.checked;\r\n                          this.setState({ inventory: this.state.inventory });\r\n                        }} /> Unlimited\r\n                        {!product.stocks.unlimited && !product.stocks.quantity && <><p className={styles.errorMessage}>  Quantity cannot be blank or unlimited should be filled </p></>}\r\n                      </td>\r\n\r\n\r\n                        <td><button className={styles.saveButton} disabled={!product.stocks.unlimited && !product.stocks.quantity} onClick={_ => { this.updateProduct(eachCat.category, subCat.subCategory, product, 'save') }}>Save</button></td>\r\n                      </>}\r\n\r\n                      {product.edit != true && <> <td className={styles.stocks}>\r\n                        {product.stocks.unlimited == true ? 'unlimited' : product.stocks.quantity}\r\n                      </td>\r\n                        <td><button className={styles.editButton} onClick={_ => { this.updateProduct(eachCat.category, subCat.subCategory, product, 'edit') }}>✏️</button></td>\r\n                      </>}\r\n\r\n                    </tr>\r\n\r\n                    </>)\r\n                  })}\r\n                </>\r\n\r\n              })}\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let tableContainer = <></>\r\n    tableContainer = <div>\r\n      <div>\r\n        {allTables}\r\n      </div>\r\n    </div>\r\n\r\n\r\n    return tableContainer;\r\n\r\n  }\r\n\r\n}\r\nexport default InventoryViewer;","import logo from './logo.svg';\nimport './App.css';\nimport InventoryViewer from './Pages/Components/InventoryViewer.jsx';\nfunction App() {\n  return (\n\n    <div>\n      <InventoryViewer />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}